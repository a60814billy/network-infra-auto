# stages:
#   - lint
#   - dry-run
#   - deploy
#   - manual-check
#   - trigger-post-deploy
#   - post-deploy

stages:
  - netmiko-snmp-dry-run
  - netmiko-snmp-deploy
  - trigger-post-deploy
  - post-deploy

default:
  image: python:3.12.4
  tags:
    - docker
  cache:
    paths:
      - .cache/pip
  before_script:
    - pip install --force-reinstall -e .

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

code-format-check:
  stage: lint
  script:
    - pip install black isort
    - black --check --diff src/
    - isort --check --diff src/
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: always
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE == "push"
      when: always

netmiko-snmp-dry-run:
  stage: netmiko-snmp-dry-run
  script:
    - infra-auto netmiko execute baseline_snmp --dry-run
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        - src/baseline_snmp/*
      when: always

netmiko-snmp-deploy:
  stage: netmiko-snmp-deploy
  script:
    - infra-auto netmiko execute baseline_snmp
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE == "push"
      changes:
        - src/baseline_snmp/*
      when: always

nornir-dry-run:
  stage: dry-run
  script:
    - infra-auto ci detect-changes | sed -r "s/\x1B\[([0-9]{1,3}(;[0-9]{1,2};?)?)?[mGK]//g" | tee .change_device_list
    - infra-auto nornir apply --device-list-file .change_device_list --dry-run | tee -a .dry_run_output
    # Remove terminal color codes from the output
    - sed -i -r "s/\x1B\[([0-9]{1,3}(;[0-9]{1,2};?)?)?[mGK]//g" .dry_run_output
  after_script:
    - infra-auto ci report-diff-to-mr --report-file .dry_run_output
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: always
  variables:
    NORNIR_LOGGING_LEVEL: "DEBUG"
  artifacts:
    paths:
      - nornir.log
    expire_in: "1 day"

nornir-apply:
  stage: deploy
  script:
    - infra-auto ci detect-changes | sed -r "s/\x1B\[([0-9]{1,3}(;[0-9]{1,2};?)?)?[mGK]//g" | tee .change_device_list
    - infra-auto nornir apply --device-list-file .change_device_list
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE == "push"
      when: always
  artifacts:
    paths:
      - .change_device_list

manual-check-config-changes:
  stage: manual-check
  tags:
    - shell
  script:
    - echo "manual check"
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE == "push"
      when: manual

trigger-post-deploy:
  stage: trigger-post-deploy
  script:
    - infra-auto ci trigger-sync-from-pipeline
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE == "push"

sync-configs-from-devices:
  stage: post-deploy
  script:
    - |
      if [ -n "$CHANGE_DEVICE_LIST" ]; then
        echo "$CHANGE_DEVICE_LIST" > .change_device_list
        echo "Received device list from parent pipeline: $CHANGE_DEVICE_LIST"
      else
        echo "No device list received from parent pipeline"
      fi
    - infra-auto nornir sync-from --device-list-file .change_device_list
    - git config --global user.email "gitlab-ci@example.com"
    - git config --global user.name "GitLab CI"
    - git add cfg/
    - |
      if git diff --cached --quiet; then
        echo "No changes to commit"
      else
        # Use GITLAB_PUSH_TOKEN (should be set as a protected CI/CD variable with write_repository scope)
        git commit -m "Update device configurations [skip ci]"
        
        # Try different push methods in order of preference
        if [ -n "$GITLAB_API_TOKEN" ]; then
          echo "Using GITLAB_API_TOKEN for authentication"
          git push http://CI:${GITLAB_API_TOKEN}@${CI_SERVER_HOST}/${CI_PROJECT_PATH}.git HEAD:main
        fi
      fi
  rules:
    - if: $CI_PIPELINE_SOURCE == "api" && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: always
  allow_failure: true
